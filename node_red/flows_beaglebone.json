[{"id":"cde2bb9.452c148","type":"tab","label":"Recoater_Vibration_Flow","disabled":false,"info":""},{"id":"c39d20e9.1876","type":"tab","label":"Old stuff","disabled":false,"info":""},{"id":"2fe58db4.78a202","type":"ui_tab","name":"Home","icon":"dashboard","disabled":false,"hidden":false},{"id":"cd0de14e.e3489","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#097479","value":"#097479","edited":false},"page-titlebar-backgroundColor":{"value":"#097479","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#333333","edited":false},"group-textColor":{"value":"#0eb8c0","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#097479","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey","palette":"light"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"4ff9d141.28643","type":"ui_group","name":"Measure Acceleration X & Z","tab":"2fe58db4.78a202","order":2,"disp":true,"width":"30","collapse":false},{"id":"75258512.d635ec","type":"ui_group","name":"Configure","tab":"2fe58db4.78a202","order":1,"disp":true,"width":"6","collapse":false},{"id":"660529af.fc6e88","type":"function","z":"cde2bb9.452c148","name":"Set Sampling Parameters","func":"var sampleSize = global.get(\"sampleSize\");\nvar sampleInterval = global.get(\"sampleInterval\");\n\n\n\nsampleInterval = ~~(sampleInterval * 1e9 + 0.5);\n\nmsg.payload = ' ' + sampleSize.toString() + ' ' + sampleInterval.toString();\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":260,"wires":[["6afaac5.9d9d854"]]},{"id":"46dc8b5f.9ed7c4","type":"debug","z":"cde2bb9.452c148","name":"ADC raw","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":700,"y":220,"wires":[]},{"id":"6afaac5.9d9d854","type":"exec","z":"cde2bb9.452c148","command":"/home/debian/recoater_vibration/PRU_code/ADCsTimed","addpay":"payload","append":"","useSpawn":"false","timer":"","oldrc":false,"name":"Run ADC","x":520,"y":260,"wires":[["46dc8b5f.9ed7c4","8db4156c.fd0ae8","3e5c7fa0.7e6cd"],[],[]]},{"id":"8db4156c.fd0ae8","type":"file in","z":"cde2bb9.452c148","name":"Read Measurement","filename":"output2.0","format":"","chunk":false,"sendError":false,"encoding":"none","x":730,"y":260,"wires":[["1b34a93a.be5fe7"]]},{"id":"1b34a93a.be5fe7","type":"function","z":"cde2bb9.452c148","name":"","func":"var vib = msg.payload\n\n//moment = context.global.moment;\n//var now = new Date();\n//var vibration = msg.payload.Vibration;\nvar payload = {};\nvar statusText = \"\";\nvar topic = \"Asset/\" + global.get(\"assetId\") + \"/Force\";\n\n// Determine when data collection started.\n//var diff = parseFloat(global.get(\"sampleSize\")) * parseFloat(global.get(\"sampleInterval\")) * 1000;\n//var previous = moment(now.valueOf() - diff);\nvar binToV = 1.8/4096; // coeff to go from 12-bit binary to voltage\n\n// Build payload\n//payload[\"dateTime\"] = now.toString();\n//payload[\"assetId\"] = global.get(\"assetId\");\npayload[\"dataItemId\"] = \"Force\";\npayload[\"samplingInterval\"] = global.get(\"sampleInterval\");\npayload[\"sampleSize\"] = global.get(\"sampleSize\");\n//payload[\"sensorId\"] = \"PCB 208C04\";\npayload[\"values\"] = [];\n\n// Calibrate the values with 12 bit resolution\nfor (i = 0; i < global.get(\"sampleSize\"); i++)\n{\n    //payload[\"values\"][i] = ((global.get(\"forceCoef1\") * parseFloat((vib[4 * i+1] << 8) + vib[4 * i]) + global.get(\"forceCoef0\"))).toFixed(5);\n    //payload[\"values\"][i] = binToV*(parseFloat((vib[4 * i+1] << 8) + vib[4 * i]));\n    payload[\"values\"][i] = (parseFloat((vib[4 * i+1] << 8) + vib[4 * i]));\n}\n\n// Set message payload and topic.\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"force\",payload[\"values\"]);\n\n// Printout a status variable.\n//statusText = previous.toISOString();\nnode.status({fill:\"green\", shape:\"dot\", text: statusText});\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":900,"y":260,"wires":[["a3d1a613.27d198","809d6a93.afff68","d0875865.00f6b8"]]},{"id":"245512be.79a2be","type":"function","z":"cde2bb9.452c148","name":"","func":"var vib = msg.payload\n\n//moment = context.global.moment;\n//var now = new Date();\nvar vibration = msg.payload.Vibration;\nvar payload = {};\nvar statusText = \"\";\nvar topic = \"Asset/\" + global.get(\"assetId\") + \"/Position\";\n\n// Determine when data collection started.\n//var diff = parseFloat(global.get(\"sampleSize\")) * parseFloat(global.get(\"sampleInterval\")) * 1000;\n//var previous = moment(now.valueOf() - diff);\nvar binToV = 1.8/4096; // coeff to go from 12-bit binary to voltage\n\n// Build payload\n//payload[\"dateTime\"] = now.toString();\n//payload[\"assetId\"] = global.get(\"assetId\");\n//payload[\"dataItemId\"] = \"Position\";\npayload[\"samplingInterval\"] = global.get(\"sampleInterval\");\npayload[\"sampleSize\"] = global.get(\"sampleSize\");\n//payload[\"sensorId\"] = \"Keyence LK-G37\";\npayload[\"values\"] = [];\n\n// Calibrate the values\nfor (i = 0; i < global.get(\"sampleSize\"); i++)\n{\n    //payload[\"values\"][i] = ((global.get(\"positionCoef1\") * parseFloat((vib[4 * i+3] << 8) + vib[4 * i+2]) + global.get(\"positionCoef0\"))).toFixed(5);\n    ///payload[\"values\"][i] = binToV*parseFloat((vib[4 * i+ 3] << 8) + vib[4 * i + 2]);\n    payload[\"values\"][i] = parseFloat((vib[4 * i+ 3] << 8) + vib[4 * i + 2]);\n    \n}\n\n// Set message payload and topic.\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"position\",payload[\"values\"]);\n\n// Printout a status variable.\n//statusText = previous.toISOString();\nnode.status({fill:\"green\", shape:\"dot\", text: statusText});\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":900,"y":300,"wires":[["57b2c6df.8815b8","17a6e6cf.9d0eb9","51b67f0b.84a93"]]},{"id":"3e5c7fa0.7e6cd","type":"file in","z":"cde2bb9.452c148","name":"Read Measurement","filename":"output2.0","format":"","chunk":false,"sendError":false,"encoding":"none","x":730,"y":300,"wires":[["245512be.79a2be"]]},{"id":"a3d1a613.27d198","type":"debug","z":"cde2bb9.452c148","name":"AIN1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1090,"y":200,"wires":[]},{"id":"57b2c6df.8815b8","type":"debug","z":"cde2bb9.452c148","name":"AIN2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1090,"y":400,"wires":[]},{"id":"809d6a93.afff68","type":"function","z":"cde2bb9.452c148","name":"","func":"\n//moment = context.global.moment;\n\nvar dataSeries1 = [];\nvar charts = [];\ncharts[0] = {};\ncharts[0][\"series\"] = [\"A1\"];\ncharts[0][\"data\"] = [];\ncharts[0][\"labels\"] = [\"\"];\n//var dataSeries1 = [];\n\n// Determine when data collection started.\n//var diff = parseFloat(global.get(\"sampleSize\")) * parseFloat(global.get(\"sampleInterval\")) * 1000\n//var previous = moment(global.get(\"dateTimeAcceleration\") - diff);\n\nfor (var i = 0; i < msg.payload[\"values\"].length; i++)\n{\n    //var dateTimePoint = previous + parseInt(i * global.get(\"sampleInterval\") * 1000);\n    var point = {\"x\":i,\"y\":msg.payload[\"values\"][i]};\n    dataSeries1[i] = point;\n}\n\ncharts[0][\"data\"][0] = dataSeries1;\n\nmsg.payload = charts;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1100,"y":240,"wires":[["d3480045.48787"]]},{"id":"d3480045.48787","type":"ui_chart","z":"cde2bb9.452c148","name":"","group":"4ff9d141.28643","order":5,"width":30,"height":8,"label":"X-Axis","chartType":"line","legend":"false","xformat":"x","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":1270,"y":240,"wires":[[]]},{"id":"17a6e6cf.9d0eb9","type":"function","z":"cde2bb9.452c148","name":"","func":"\n//moment = context.global.moment;\n\nvar dataSeries1 = [];\nvar charts = [];\ncharts[0] = {};\ncharts[0][\"series\"] = [\"A1\"];\ncharts[0][\"data\"] = [];\ncharts[0][\"labels\"] = [\"\"];\n//var dataSeries1 = [];\n\n// Determine when data collection started.\n//var diff = parseFloat(global.get(\"sampleSize\")) * parseFloat(global.get(\"sampleInterval\")) * 1000\n//var previous = moment(global.get(\"dateTimeAcceleration\") - diff);\n\nfor (var i = 0; i < msg.payload[\"values\"].length; i++)\n{\n    //var dateTimePoint = previous + parseInt(i * global.get(\"sampleInterval\") * 1000);\n    var point = {\"x\":i,\"y\":msg.payload[\"values\"][i]};\n    dataSeries1[i] = point;\n}\n\ncharts[0][\"data\"][0] = dataSeries1;\n\nmsg.payload = charts;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1100,"y":360,"wires":[["a46bf88.2250b08"]]},{"id":"a46bf88.2250b08","type":"ui_chart","z":"cde2bb9.452c148","name":"","group":"4ff9d141.28643","order":6,"width":30,"height":8,"label":"Z-Axis","chartType":"line","legend":"false","xformat":"s.SSS","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":1270,"y":360,"wires":[[]]},{"id":"d0875865.00f6b8","type":"file","z":"cde2bb9.452c148","name":"Save X-axis","filename":"/home/debian/master/x_axis.txt","appendNewline":true,"createDir":true,"overwriteFile":"true","encoding":"none","x":1110,"y":280,"wires":[[]]},{"id":"4e52dbda.5bff44","type":"inject","z":"cde2bb9.452c148","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":160,"y":440,"wires":[["b0763997.19e3b8"]]},{"id":"b0763997.19e3b8","type":"exec","z":"cde2bb9.452c148","command":"python3 /home/debian/recoater_vibration/signal_analysis.py","addpay":"payload","append":"","useSpawn":"false","timer":"","oldrc":false,"name":"","x":480,"y":440,"wires":[["f0059a79.2a8ac8"],[],[]]},{"id":"56853c5e.adb554","type":"ui_button","z":"cde2bb9.452c148","name":"","group":"4ff9d141.28643","order":3,"width":0,"height":0,"passthru":false,"label":"Clear Charts","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":1290,"y":300,"wires":[["d3480045.48787","a46bf88.2250b08"]]},{"id":"35c8ad5f.ad9872","type":"ui_text_input","z":"cde2bb9.452c148","name":"","label":"Set Frequency","tooltip":"in Hz","group":"75258512.d635ec","order":1,"width":0,"height":0,"passthru":true,"mode":"number","delay":"0","topic":"topic","topicType":"msg","x":160,"y":100,"wires":[["fbf05629.3c6438"]]},{"id":"fbf05629.3c6438","type":"function","z":"cde2bb9.452c148","name":"","func":"var frequency = msg.payload;\nsampleInterval = 1/frequency;\nglobal.set(\"sampleInterval\", sampleInterval); \n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":100,"wires":[["cc0573a0.e9284"]]},{"id":"cc0573a0.e9284","type":"debug","z":"cde2bb9.452c148","name":"test_input","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":580,"y":100,"wires":[]},{"id":"adcd794a.7c1fa8","type":"function","z":"c39d20e9.1876","name":"Set global variables","func":"\n// Configuration Variables for force and position\nglobal.set(\"sampleInterval\", 0.0001);    //How fast is the acceleration data sampled (seconds)\nglobal.set(\"sampleSize\", 1000);           //How many acceleration samples are taken each interval. See: https://arch.fis.gatech.edu/message-current/\n\n// Force calibration values\n//global.set(\"forceCoef0\", -11491 );\n//global.set(\"forceCoef1\", 5.2552);\n\n\n\nstatusText = \"Variables Set\"\nnode.status({fill:\"green\", shape:\"dot\", text: statusText});\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":160,"wires":[["7c964d3.a1874b4"]]},{"id":"c35082ba.e589e","type":"inject","z":"c39d20e9.1876","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":180,"y":160,"wires":[["adcd794a.7c1fa8"]]},{"id":"7c964d3.a1874b4","type":"debug","z":"c39d20e9.1876","name":"global","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":630,"y":160,"wires":[]},{"id":"8a50249e.08f148","type":"comment","z":"c39d20e9.1876","name":"used to set variables via backdoor","info":"","x":270,"y":100,"wires":[]},{"id":"5f3a4553.38e3ac","type":"function","z":"cde2bb9.452c148","name":"","func":"var sampleSize = msg.payload;\nglobal.set(\"sampleSize\", sampleSize); \n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":140,"wires":[["3c68e683.8ea9da"]]},{"id":"3c68e683.8ea9da","type":"debug","z":"cde2bb9.452c148","name":"test_input","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":580,"y":140,"wires":[]},{"id":"cd72123d.1adc1","type":"ui_button","z":"cde2bb9.452c148","name":"","group":"4ff9d141.28643","order":4,"width":0,"height":0,"passthru":false,"label":"Measure","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":140,"y":260,"wires":[["660529af.fc6e88"]]},{"id":"49c8caf4.3fe5a4","type":"ui_text_input","z":"cde2bb9.452c148","name":"","label":"Set Number of Samples","tooltip":"","group":"75258512.d635ec","order":2,"width":0,"height":0,"passthru":true,"mode":"number","delay":"0","topic":"topic","topicType":"msg","x":190,"y":140,"wires":[["5f3a4553.38e3ac"]]},{"id":"51b67f0b.84a93","type":"file","z":"cde2bb9.452c148","name":"Save Z-axis","filename":"/home/debian/master/x_axis.txt","appendNewline":true,"createDir":true,"overwriteFile":"true","encoding":"none","x":1110,"y":320,"wires":[[]]},{"id":"14412809.c10bf8","type":"comment","z":"cde2bb9.452c148","name":"Allow user to select sample frequency and size","info":"","x":260,"y":60,"wires":[]},{"id":"59586c0f.9eea74","type":"comment","z":"cde2bb9.452c148","name":"Read and save acceleration data","info":"this runs the BBB ADC's and saves them as raw values (1's and 0's) then node-red reads them and converts them to asci and charts them. Node-red then also saves the processed data as text files for the python FFT algo to process them","x":210,"y":220,"wires":[]},{"id":"f0059a79.2a8ac8","type":"debug","z":"cde2bb9.452c148","name":"py debug","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":780,"y":400,"wires":[]}]